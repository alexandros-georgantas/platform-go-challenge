openapi: 3.0.0
info:
  title: Simple API
  description: A simple API
  version: 1.0.0
servers:
  - url: https://localhost:3000/api/v1
paths:
  /users/{userId}/favorites/{favoriteId}:
    get:
      summary: Get details of user's favorite
      description: Get details of favorite item
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: favoriteId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Assets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetsResponse"
    delete:
      summary: Delete an item from favorites table
      description: Un-favorite an asset for that user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: favoriteId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Assets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedResponse"
  /assets:
    get:
      summary: Get all the available assets of the app
      description: Get all asset entities
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Assets
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/AssetsResponse"
  /assets/charts:
    get:
      summary: Get all the available chart assets of the app
      description: Get all chart asset entities
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Charts
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/AssetsResponse"
  /assets/insights:
    get:
      summary: Get all the available insight assets of the app
      description: Get all insight asset entities
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Insights
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/AssetsResponse"
  /assets/audiences:
    get:
      summary: Get all the available audience assets of the app
      description: Get all audience asset entities
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Audiences
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/AssetsResponse"
  /assets/{assetId}:
    get:
      summary: Get the details of a specific asset of the app
      description: Get specific asset entity
      security:
        - bearerAuth: []
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Assets
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Asset"
    patch:
      summary: Updates the description of an asset
      description: Updates the description of an asset
      security:
        - bearerAuth: []
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDescription"
      responses:
        "200":
          description: Updated Asset
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Asset"
  /tokens:
    post:
      summary: Creates JWT token for user
      description: Creates JWT token for user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginReq"
      responses:
        "200":
          description: User JWT token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginRes"
  /users:
    get:
      summary: Get the current logged in user
      description: Retrieve current user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Current user
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/CurrentUser"
    post:
      summary: Create a new user
      description: Registers a new user to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpReq"
      responses:
        "201":
          description: New user id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpResponse"
  /users/{userId}/favorites:
    get:
      summary: Get the user's favorites
      description: Retrieve current user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Favorite items of user
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/FavoritesResponse"
    post:
      summary: Mark an asset as favorite
      description: Make an asset favorite for that user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteReq"
      responses:
        "201":
          description: A new record is added in favorites table
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Optional, but indicates the format of the token
  schemas:
    LoginReq:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginRes:
      type: object
      properties:
        token:
          type: string
    SignUpResponse:
      type: object
      properties:
        userId:
          type: integer
    UpdateDescription:
      type: object
      properties:
        description:
          type: string
    CurrentUser:
      type: object
      properties:
        ID:
          type: integer
        Email:
          type: string
        GivenName:
          type: string
        Surname:
          type: string
    SignUpReq:
      type: object
      properties:
        Email:
          type: string
        GivenName:
          type: string
        Surname:
          type: string
        Password:
          type: string
    Chart:
      type: object
      properties:
        ID:
          type: integer
        Title:
          type: string
        HorizontalAxisLabel:
          type: string
        VerticalAxisLabel:
          type: string
        Data:
          type: array
          items:
            type: number
            format: float
    Insight:
      type: object
      properties:
        ID:
          type: integer
        Text:
          type: string
    Audience:
      type: object
      properties:
        ID:
          type: integer
        Gender:
          type: string
        CountryOfBirth:
          type: string
        AgeGroup:
          type: string
        DailyHoursOnSocialMedia:
          type: integer
        LastMonthNumberOfPurchases:
          type: integer
    Asset:
      type: object
      properties:
        ID:
          type: integer
        Description:
          type: string
        RelatedID:
          type: integer
        RelatedType:
          type: string
        Chart:
          type: object
          $ref: "#/components/schemas/Chart"
        Insight:
          type: object
          $ref: "#/components/schemas/Insight"
        Audience:
          type: object
          $ref: "#/components/schemas/Audience"
    AssetsResponse:
      type: object
      properties:
        totalCount:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/Asset"
    FavoriteReq:
      type: object
      properties:
        id:
          type: integer
    FavoriteResponse:
      type: object
      properties:
        ID:
          type: integer
        UserID:
          type: integer
        AssetID:
          type: integer
        Asset:
          $ref: "#/components/schemas/Asset"
    FavoritesResponse:
      type: object
      properties:
        totalCount:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/Asset"
    DeletedResponse:
      type: object
      properties:
        deletedId:
          type: integer
